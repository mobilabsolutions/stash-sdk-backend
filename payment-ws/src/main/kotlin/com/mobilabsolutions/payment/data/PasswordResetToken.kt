/*
 * Copyright Â© MobiLab Solutions GmbH
 */

package com.mobilabsolutions.payment.data

import com.mobilabsolutions.payment.data.configuration.AutoGeneratedIdTimeAuditable
import java.util.Date
import javax.persistence.Column
import javax.persistence.Entity
import javax.persistence.ForeignKey
import javax.persistence.GeneratedValue
import javax.persistence.GenerationType
import javax.persistence.Id
import javax.persistence.JoinColumn
import javax.persistence.ManyToOne
import javax.persistence.Table

/**
 * @author <a href="mailto:mohamed.osman@mobilabsolutions.com">Mohamed Osman</a>
 */
@Entity
@Table(name = "password_reset_token")
class PasswordResetToken(
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    var id: Long? = null,

    @Column(name = "token")
    var token: String?,

    @Column(name = "expiry_date")
    var expiryDate: Date?,

    @ManyToOne
    @JoinColumn(name = "merchant_user_id", nullable = false, foreignKey = ForeignKey(name = "fk_merchant_user_passwordresettoken"))
    var merchantUser: MerchantUser = MerchantUser()
) : AutoGeneratedIdTimeAuditable() {

    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PasswordResetToken

        if (id != other.id) return false

        return true
    }

    override fun hashCode(): Int {
        return id?.hashCode() ?: 0
    }

    fun isExpired(): Boolean {
        return Date().after(this.expiryDate)
    }
}
