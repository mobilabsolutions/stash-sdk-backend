package com.mobilabsolutions.payment.data.domain

import com.mobilabsolutions.payment.data.enum.PaymentServiceProvider
import org.hibernate.annotations.Type
import org.springframework.data.util.ProxyUtils
import java.util.Objects
import javax.persistence.Column
import javax.persistence.Entity
import javax.persistence.EnumType
import javax.persistence.Enumerated
import javax.persistence.ForeignKey
import javax.persistence.Id
import javax.persistence.JoinColumn
import javax.persistence.Lob
import javax.persistence.ManyToOne
import javax.persistence.Table

/**
 * @author <a href="mailto:jovana@mobilabsolutions.com">Jovana Veskovic</a>
 */
@Entity
@Table(name = "alias")
class Alias(
    @Id
    @Column(name = "id", length = 20)
    var id: String? = null,

    @Column(name = "idempotent_key")
    var idempotentKey: String? = null,

    @Column(name = "psp_alias")
    var pspAlias: String? = null,

    @Column(name = "active")
    var active: Boolean = true,

    @Lob
    @Type(type = "org.hibernate.type.TextType")
    @Column(name = "extra")
    var extra: String? = null,

    @Enumerated(EnumType.STRING)
    @Column(name = "psp")
    var psp: PaymentServiceProvider? = null,

    @Column(name = "user_agent")
    var userAgent: String? = null,

    @ManyToOne
    @JoinColumn(name = "merchant_id", foreignKey = ForeignKey(name = "fk_merchant_alias"))
    var merchant: Merchant? = Merchant()
) : AutoGeneratedIdTimeAuditable() {

    override fun hashCode(): Int {
        var hash = 7
        hash = 97 * hash + Objects.hashCode(this.id)
        return hash
    }

    override fun equals(other: Any?): Boolean {
        other ?: return false

        if (this === other) return true

        if (javaClass != ProxyUtils.getUserClass(other)) return false

        other as Alias

        return this.id == other.id
    }

    override fun toString(): String {
        return "Alias [pspAlias=$pspAlias, active=$active, extra=$extra, psp=$psp, " +
            "merchant=$merchant]"
    }
}
