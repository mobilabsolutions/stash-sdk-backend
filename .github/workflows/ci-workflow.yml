name: CI Workflow

on: [push, pull_request]

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v1
        - uses: actions/setup-java@v1
          with:
            java-version: 12.0.2
        - name: Build & Test
          run: |
            mvn verify
            mvn package -DskipTests=true -B -V -nsu
        - name: Build Docker Images
          env:
              REGISTRY: eu.gcr.io/payment-server-reloaded
          run: |
              WS_INITIAL_IMAGE=${REGISTRY}/payment-sdk-backend:commit-${{ github.sha }}
              echo "Building ${WS_INITIAL_IMAGE}"
              docker build -f Dockerfile -t ${WS_INITIAL_IMAGE} .

              NOTIF_INITIAL_IMAGE=${REGISTRY}/payment-sdk-notification:commit-${{ github.sha }}
              echo "Building ${NOTIF_INITIAL_IMAGE}"
              docker build -f Dockerfile -t ${NOTIF_INITIAL_IMAGE} .
        - uses: actions/gcloud/auth@master
          env:
            GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        - name: Tag Docker Images
          env:
              REGISTRY: eu.gcr.io/payment-server-reloaded
          run: |
              WS_BASE_IMAGE=${REGISTRY}/payment-sdk-backend
              WS_INITIAL_IMAGE=${WS_BASE_IMAGE}:commit-${{ github.sha }}
              NOTIF_BASE_IMAGE=${REGISTRY}/payment-sdk-notification
              NOTIF_INITIAL_IMAGE=${NOTIF_BASE_IMAGE}:commit-${{ github.sha }}
              if ${{ endsWith(github.ref, 'master') }}; then
                docker tag ${WS_INITIAL_IMAGE} ${WS_BASE_IMAGE}:latest
                docker tag ${NOTIF_INITIAL_IMAGE} ${NOTIF_BASE_IMAGE}:latest
              fi
              if ${{ github.head_ref != ''}}; then
                docker tag ${WS_INITIAL_IMAGE} ${WS_BASE_IMAGE}:pr-${{ github.head_ref }}
                docker tag ${NOTIF_INITIAL_IMAGE} ${NOTIF_BASE_IMAGE}:pr-${{ github.head_ref }}
              fi
        - name: Push Docker Images
          uses: actions/gcloud/cli@master
          env:
            REGISTRY: eu.gcr.io/payment-server-reloaded
          with:
            args: |
              auth configure-docker --quiet
              docker push ${REGISTRY}/payment-server-reloaded
              docker push ${REGISTRY}/payment-sdk-notification
